/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers
#define COLEMAK 0
#define QWERTY  1
#define LOWER   2
#define UPPER   3
#define MAGIC   4

&led_strip {
    chain-length = <27>;
};

/ {
    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 3>;
        };

        to_chi: to_chi_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>, <&to QWERTY>;
        };

        to_eng: to_eng_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>, <&to COLEMAK>;
        };
    };

    behaviors {
        caps_toggle: tap_dance_caps_toggle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp LS(CAPS)>;
        };
        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comma_semi_lpar: comma_semi_lpar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&comma_semi>, <&kp LPAR>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_colon_rpar: dot_colon_rpar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&dot_colon>, <&kp RPAR>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        sqt_dqt: sqt_dqt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sqt_dqt_lbrc: sqt_dqt_lbrc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sqt_dqt>, <&kp LBRC>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        fslh_qmark: fslh_qmark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        fslh_qmark_rbrc: fslh_qmark_rbrc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&fslh_qmark>, <&kp RBRC>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n2_lt: n2_lt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp LT>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n3_gt: n3_gt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp GT>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n8_lbkt: n8_lbkt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp LBKT>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n9_rbkt: n9_rbkt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp RBKT>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        up_pgup: up_pgup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PG_UP>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        down_pgdn: down_pgdn {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PG_DN>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            bindings = <
                &none  &kp Q  &kp W  &kp F  &kp P  &kp G    &kp J  &kp L  &kp U             &kp Y            &sqt_dqt_lbrc     &none
                &none  &kp A  &kp R  &kp S  &kp T  &kp D    &kp H  &kp N  &kp E             &kp I            &kp O             &none
                &none  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp K  &kp M  &comma_semi_lpar  &dot_colon_rpar  &fslh_qmark_rbrc  &none
                &mo MAGIC  &lt LOWER BSPC &mt LSHFT BSPC    &mt RCTRL SPACE  &lt UPPER SPACE  &mo MAGIC
            >;
        };

        qwerty_layer {
            bindings = <
                &trans  &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y  &kp U  &kp I   &kp O   &kp P          &trans
                &trans  &kp A  &kp S  &kp D  &kp F  &kp G    &kp H  &kp J  &kp K   &kp L   &sqt_dqt_lbrc  &trans
                &trans  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N  &kp M  &trans  &trans  &trans         &trans
                                   &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        lower_layer {
            bindings = <
                &trans  &kp TAB        &to_chi       &to_eng    &kp COLON  &kp GRAVE       &kp KP_MULTIPLY   &kp N7  &n8_lbkt  &n9_rbkt  &kp BSLH   &trans
                &trans  &sk LGUI       &sk LALT      &sk LCTRL  &sk LSHFT  &kp KP_EQUAL    &kp KP_PLUS       &kp N4  &kp N5    &kp N6    &kp MINUS  &trans
                &trans  &lt MAGIC ESC  &caps_toggle  &kp RET    &kp UNDER  &kp TILDE       &kp N0            &kp N1  &n2_lt    &n3_gt    &trans     &trans
                                                                  &none  &trans  &trans    &trans  &trans  &none
            >;
        };

        upper_layer {
            bindings = <
                &trans  &kp F1    &kp F2    &kp F3     &kp F4     &kp F5           &kp LG(V)  &kp LG(Z)      &up_pgup    &kp TAB      &kp BSPC       &trans
                &trans  &sk LGUI  &sk LALT  &sk LCTRL  &sk LSHFT  &kp LG(SPACE)    &kp LG(C)  &kp LEFT       &down_pgdn  &kp RIGHT    &lt MAGIC RET  &trans
                &trans  &kp F6    &kp F7    &kp F8     &kp F9     &kp F10          &kp LG(X)  &kp LG(LS(Z))  &kp ESC     &key_repeat  &kp DEL        &trans
                                                          &none  &trans  &trans    &trans  &trans  &none
            >;
        };

        magic_layer {
            bindings = <
                &rgb_ug RGB_TOG  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &bootloader    &bootloader  &kp C_PP    &kp C_VOL_UP  &kp C_MUTE  &none  &none
                &rgb_ug RGB_EFF  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &soft_off      &soft_off    &kp C_PREV  &kp C_VOL_DN  &kp C_NEXT  &none  &none
                &none            &none            &bt_0            &bt_1            &bt_2            &bt_3          &to COLEMAK  &to QWERTY  &to LOWER     &to UPPER   &none  &none
                                                                                    &trans  &trans  &out OUT_USB    &bt BT_CLR  &trans  &trans
            >;
        };
    };
};
