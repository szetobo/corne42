/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers
#define COLEMAK 0
#define QWERTY  1
#define LOWER   2
#define UPPER   3
#define MAGIC   4

&led_strip {
    chain-length = <27>;
};

&soft_off {
    hold-time-ms = <3000>;
};

/ {
    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 3>;
        };

        bt_4: bt_profile_macro_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 4>;
        };

        to_chi: to_chi_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>, <&to QWERTY>;
        };

        to_eng: to_eng_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>, <&to COLEMAK>;
        };
    };

    behaviors {
        ctrl_magic: tap_dance_ctrl_magic {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&sk LCTRL>, <&mo MAGIC>;
        };
        gui_magic: tap_dance_gui_magic {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&sk RGUI>, <&mo MAGIC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            bindings = <
                &kp GRAVE  &kp Q  &kp W  &kp F  &kp P  &kp G  &kp J  &kp L  &kp U      &kp Y    &kp SEMI  &kp BSLH
                &to_chi    &kp A  &kp R  &kp S  &kp T  &kp D  &kp H  &kp N  &kp E      &kp I    &kp O     &kp SQT
                &kp ESC    &kp Z  &kp X  &kp C  &kp V  &kp B  &kp K  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                      &ctrl_magic  &lt LOWER BSPC  &sk LSHFT  &lt LOWER RET  &lt UPPER SPACE  &gui_magic
            >;
        };

        qwerty_layer {
            bindings = <
                &kp GRAVE  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BSLH
                &to_eng    &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
                &kp ESC    &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                                      &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        lower_layer {
            bindings = <
                &trans        &kp CARET  &kp LBKT  &kp LPAR   &kp LBRC   &kp PRCNT  &kp KP_MULTIPLY  &kp N7  &kp N8  &kp N9  &kp KP_DIVIDE  &kp BSPC
                &caps_word    &sk LGUI   &sk LALT  &sk LCTRL  &sk LSHFT  &kp EQUAL  &kp KP_PLUS      &kp N4  &kp N5  &kp N6  &kp KP_MINUS   &kp LT
                &kp LS(CAPS)  &kp DLLR   &kp RBKT  &kp RPAR   &kp RBRC   &kp TILDE  &kp N0           &kp N1  &kp N2  &kp N3  &kp KP_DOT     &kp GT
                                                            &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        upper_layer {
            bindings = <
                &kp F11  &kp F1    &kp F2    &kp F3     &kp F4     &kp F5   &kp LG(V)  &key_repeat  &kp ESC    &kp TAB    &kp DEL    &kp BSPC
                &kp F12  &sk LGUI  &sk LALT  &sk LCTRL  &sk LSHFT  &kp INS  &kp LG(C)  &kp LEFT     &kp DOWN   &kp UP     &kp RIGHT  &kp LG(Z)
                &trans   &kp F6    &kp F7    &kp F8     &kp F9     &kp F10  &kp LG(X)  &kp HOME     &kp PG_DN  &kp PG_UP  &kp END    &kp LG(LS(Z))
                                                    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        magic_layer {
            bindings = <
                &bootloader  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG  &none        &kp C_BRI_DN  &kp C_MUTE  &kp C_BRI_UP  &none       &bootloader
                &sys_reset   &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &kp C_PREV   &kp C_VOL_DN  &kp C_PP    &kp C_VOL_UP  &kp C_NEXT  &sys_reset
                &soft_off    &bt_0            &bt_1            &bt_2            &bt_3            &bt_4            &to COLEMAK  &to QWERTY    &to LOWER   &to UPPER     &none       &soft_off
                                                                                    &trans  &trans  &out OUT_USB  &bt BT_CLR  &trans  &trans
            >;
        };
    };
};
